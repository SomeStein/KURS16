**free

ctl-opt main(AUFG007) dftactgrp(*no) actgrp(*caller);

// MAIN PROGRAMM
dcl-proc AUFG007;

  dcl-f CSVFILE disk usage(*input) keyed rename(CSVFILE:CSVFILER) infds(Re_Info_i);
  dcl-f OBSTPF  disk usage(*output: *update) keyed;

  dcl-ds Re_Info_i qualified;
    RRN          int(10)  pos(397);
  end-ds;

  dcl-ds i_CSVFILER  likerec(CSVFILER: *input);
  dcl-ds i_OBSTPFR   likerec(OBSTPFR:  *input);
  dcl-ds o_OBSTPFR   likerec(OBSTPFR:  *output);

  dcl-s parserOutput varchar(1024) dim(256);
  dcl-s numTokens    int(10);

  // main loop (over rows in CSV file)
  Read CSVFILER i_CSVFILER;
  DoW not %Eof;

    // skip header row
    if Re_Info_i.RRN = 1;
      Read CSVFILE i_CSVFILER;
      iter;
    endif;

    // parse row
    numTokens = parse(i_CSVFILER.DATEN: parserOutput);

    // write to OBSTPFR
    o_OBSTPFR.ARTNR = %char(parserOutput(1));
    o_OBSTPFR.ARTBEZ = parserOutput(2);
    o_OBSTPFR.KPREIS = %dec(parserOutput(3): 7: 2);
    o_OBSTPFR.QUALKLS = %dec(parserOutput(4): 1: 0);

    Chain o_OBSTPFR.ARTNR OBSTPF i_OBSTPFR;

    If %found;
      i_OBSTPFR.ARTNR = o_OBSTPFR.ARTNR;
      i_OBSTPFR.ARTBEZ = o_OBSTPFR.ARTBEZ;
      i_OBSTPFR.KPREIS = o_OBSTPFR.KPREIS;
      i_OBSTPFR.QUALKLS = o_OBSTPFR.QUALKLS;
      Update OBSTPFR i_OBSTPFR;
    else;
      Write OBSTPFR o_OBSTPFR;
    EndIf;

    // Read next row
    Read CSVFILER i_CSVFILER;
  EndDo;

  *inlr = *on;
end-proc;

dcl-proc parse;
  dcl-pi *n int(10);
    row             varchar(1024)  const;
    output          varchar(1024)  dim(256);
  end-pi;

  dcl-s trimmedRow  varchar(1024);
  dcl-s i           int(10)        inz(1);
  dcl-s inQuotes    ind            inz(*off);
  dcl-s currentChar char(1);

  dcl-s arrayIndex  int(10)        inz(1);
  dcl-s fieldValue  varchar(1024)  inz('');
  dcl-s arraySize   int(10);

  trimmedRow = %trim(row);
  for i = 1 to %len(trimmedRow);
    currentChar = %subst(trimmedRow: i: 1);
    if inQuotes;
      if currentChar = '"';
        if i + 1 < %len(trimmedRow);
          if %subst(trimmedRow: i + 1: 1) = '"';
            fieldValue += currentChar;
            i += 1;
          else;
            inQuotes = *off;
          endif;
        endif;
      else;
        fieldValue += currentChar;
      endif;
    else;
      if currentChar = ';';
        output(arrayIndex) = fieldValue;
        arrayIndex += 1;
        arraySize += 1;
        fieldValue = '';
      elseif currentChar = '"';
        inQuotes = *on;
      else;
        fieldValue += currentChar;
      endif;
    endif;
  endfor;
  output(arrayIndex) = fieldValue;
  arraySize += 1;
  return arraySize;
end-proc;
